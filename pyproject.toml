[project]
name = "blossomtune-gradio"
version = "0.1.0"
description = "Run and orchestrate fedetated learning with Flower.ai and Gradio"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "apscheduler>=3.11.0",
    "flwr[simulation]>=1.21.0",
    "flwr-datasets>=0.5.0",
    "gradio[oauth]>=5.44.1",
    "torch>=2.8.0",
    "transformers>=4.56.1",
    "scikit-learn>=1.7.1",
    "evaluate>=0.4.5",
    "markupsafe==2.1.3",
    "jinja2>=3.1.6",
]

[tool.uv.sources]
torch = [
    { index = "pytorch-cpu" },
]
torchvision = [
    { index = "pytorch-cpu" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"

[tool.ruff.lint]

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]

# Double quotes for strings.
quote-style = "double"

# Iindent with spaces.
indent-style = "space"

# Respect magic trailing commas.
skip-magic-trailing-comma = false

# Automatically detect line ending.
line-ending = "auto"

# Disable auto-formatting of code examples in docstrings.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "google"  # Accepts: "google", "numpy", or "pep257".

[dependency-groups]
dev = [
    "cryptography>=44.0.3",
    "dnspython>=2.8.0",
    "mlx-lm>=0.28.2",
    "mlx[cpu]>=0.29.2",
    "pytest>=8.4.1",
    "pytest-mock>=3.15.1",
]

[tool.pytest.ini_options]
pythonpath = "."
addopts = [
    "--import-mode=importlib",
]
testpaths = ["tests"]

[build-system]
requires = ["setuptools>=61.0", "wheel", "build"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["blossomtune_gradio", "flower_apps"]
exclude = ["results", "data"]
